# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt6 import QtCore, QtGui, QtWidgets # type: ignore
import pygame
import threading
import os



# --- Config Editor Dialog ---
class ConfigEditor(QtWidgets.QDialog):
    def __init__(self, config_path, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Edit config.yaml")
        self.resize(600, 500)
        self.config_path = config_path
        layout = QtWidgets.QVBoxLayout(self)
        self.textedit = QtWidgets.QPlainTextEdit(self)
        layout.addWidget(self.textedit)
        btn_save = QtWidgets.QPushButton("Save", self)
        btn_save.clicked.connect(self.save_file)
        layout.addWidget(btn_save)
        self.load_file()

    def load_file(self):
        try:
            with open(self.config_path, 'r', encoding='utf-8') as f:
                self.textedit.setPlainText(f.read())
        except Exception as e:
            self.textedit.setPlainText(f"Error loading file: {e}")

    def save_file(self):
        try:
            with open(self.config_path, 'w', encoding='utf-8') as f:
                f.write(self.textedit.toPlainText())
            QtWidgets.QMessageBox.information(self, "Saved", "Config saved!")
        except Exception as e:
            QtWidgets.QMessageBox.critical(self, "Error", str(e))

# --- Pygame Widget ---
class PygameWidget(QtWidgets.QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setAttribute(QtCore.Qt.WidgetAttribute.WA_PaintOnScreen, True)
        self.setAttribute(QtCore.Qt.WidgetAttribute.WA_OpaquePaintEvent, True)
        self.setMinimumSize(400, 300)
        self.running = True
        self.pygame_thread = threading.Thread(target=self.pygame_loop, daemon=True)
        self.pygame_thread.start()

    def pygame_loop(self):
        os.environ['SDL_WINDOWID'] = str(int(self.winId()))
        pygame.init()
        screen = pygame.display.set_mode((self.width(), self.height()), pygame.RESIZABLE)
        clock = pygame.time.Clock()
        color = (30, 30, 40)
        angle = 0
        while self.running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    self.running = False
            screen.fill(color)
            # Draw a moving circle
            w, h = self.width(), self.height()
            cx, cy = w // 2, h // 2
            r = min(w, h) // 4
            x = int(cx + r * pygame.math.Vector2(1, 0).rotate(angle).x)
            y = int(cy + r * pygame.math.Vector2(1, 0).rotate(angle).y)
            pygame.draw.circle(screen, (100, 200, 255), (x, y), 30)
            # Draw label
            font = pygame.font.SysFont("consolas", 24, bold=True)
            label = font.render("BarkEngine Renderer (2D Pygame)", True, (255, 255, 255))
            screen.blit(label, (10, 10))
            pygame.display.flip()
            angle = (angle + 2) % 360
            clock.tick(60)

    def closeEvent(self, event):
        self.running = False
        pygame.quit()
        event.accept()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, -30, 801, 111))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(610, 130, 151, 41))
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(590, 50, 801, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.line = QtWidgets.QFrame(parent=self.centralwidget)
        self.line.setGeometry(QtCore.QRect(570, 90, 31, 491))
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(590, 80, 211, 20))
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.toolButton = QtWidgets.QToolButton(parent=self.centralwidget)
        self.toolButton.setGeometry(QtCore.QRect(760, 530, 31, 22))
        self.toolButton.setObjectName("toolButton")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(610, 180, 151, 41))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(610, 230, 151, 41))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(610, 280, 151, 41))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(610, 330, 151, 41))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(610, 380, 151, 41))
        self.pushButton_6.setObjectName("pushButton_6")
        self.launchGameButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.launchGameButton.setGeometry(QtCore.QRect(20, 90, 551, 461))
        self.launchGameButton.setText("Launch BarkEngine Game Demo")
        self.launchGameButton.setObjectName("launchGameButton")

        # Connect Open Config.yaml button
        self.pushButton.clicked.connect(self.open_config_editor)
        self.launchGameButton.clicked.connect(self.launch_pygame_demo)

        # Finalize UI setup
        self.finalizeUi(MainWindow)

    def open_config_editor(self):
        config_path = os.path.join(os.path.dirname(__file__), 'config.yaml')
        dlg = ConfigEditor(config_path)
        dlg.exec()

    def launch_pygame_demo(self):
        import threading
        threading.Thread(target=run_pygame_demo, daemon=True).start()

# --- Basic Pygame Game Demo ---
def run_pygame_demo():
    import pygame
    import sys
    pygame.init()
    size = (600, 400)
    screen = pygame.display.set_mode(size)
    pygame.display.set_caption("BarkEngine Game Demo")
    clock = pygame.time.Clock()
    x, y = 100, 100
    vx, vy = 3, 2
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
        x += vx
        y += vy
        if x < 0 or x > size[0] - 50:
            vx = -vx
        if y < 0 or y > size[1] - 50:
            vy = -vy
        screen.fill((30, 30, 40))
        pygame.draw.rect(screen, (100, 200, 255), (x, y, 50, 50))
        font = pygame.font.SysFont("consolas", 24, bold=True)
        clock.tick(60)
    pygame.quit()

    def finalizeUi(self, MainWindow):
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "BarkEngine25 - Yes theres been 25 of them... - Made By FunnyTom777"))
        self.pushButton.setText(_translate("MainWindow", "Open Config.yaml"))
        self.label_2.setText(_translate("MainWindow", "Some Quick Options:"))
        self.toolButton.setText(_translate("MainWindow", "..."))
        self.pushButton_2.setText(_translate("MainWindow", "Somthing1"))
        self.pushButton_3.setText(_translate("MainWindow", "Somthing2"))
        self.pushButton_4.setText(_translate("MainWindow", "Somthing3"))
        self.pushButton_5.setText(_translate("MainWindow", "Somthing4"))
        self.pushButton_6.setText(_translate("MainWindow", "Somthing5"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
